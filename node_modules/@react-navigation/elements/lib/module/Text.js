function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import { useTheme } from '@react-navigation/native';
import * as React from 'react';
import { Text as NativeText } from 'react-native';
export function Text(_ref) {
  let {
    style,
    ...rest
  } = _ref;
  const {
    colors,
    fonts
  } = useTheme();
  return /*#__PURE__*/React.createElement(NativeText, _extends({}, rest, {
    style: [{
      color: colors.text
    }, fonts.regular, style]
  }));
}
//# sourceMappingURL=Text.js.map