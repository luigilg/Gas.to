function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from 'react';
import { StyleSheet } from 'react-native';
import { Text } from '../Text';
export function Label(_ref) {
  let {
    tintColor,
    style,
    ...rest
  } = _ref;
  return /*#__PURE__*/React.createElement(Text, _extends({
    numberOfLines: 1
  }, rest, {
    style: [styles.label, tintColor != null && {
      color: tintColor
    }, style]
  }));
}
const styles = StyleSheet.create({
  label: {
    textAlign: 'center',
    backgroundColor: 'transparent'
  }
});
//# sourceMappingURL=Label.js.map